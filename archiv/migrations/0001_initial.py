# Generated by Django 5.1.3 on 2024-11-12 07:11

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Place",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Name of the Place",
                        max_length=300,
                        verbose_name="Name",
                    ),
                ),
                (
                    "type_of_place",
                    models.CharField(
                        choices=[
                            ("city", "City"),
                            ("country", "Country"),
                            ("other", "Something else"),
                        ],
                        max_length=20,
                    ),
                ),
            ],
            options={
                "verbose_name": "Place",
                "verbose_name_plural": "Places",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Name of the Person",
                        max_length=300,
                        verbose_name="Name",
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True,
                        help_text="Date of birth. Use the first of the month/year if only month or year is known",
                        null=True,
                        verbose_name="Date of birth",
                    ),
                ),
                (
                    "date_of_death",
                    models.DateField(
                        blank=True,
                        help_text="Date of death. Use the first of the month/year if only month or year is known",
                        null=True,
                        verbose_name="Date of death",
                    ),
                ),
                (
                    "place_of_birth",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="place_of_birth_of",
                        to="archiv.place",
                    ),
                ),
                (
                    "place_of_death",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="place_of_death_of",
                        to="archiv.place",
                    ),
                ),
            ],
            options={
                "verbose_name": "Person",
                "verbose_name_plural": "Persons",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="The title of the Book",
                        max_length=300,
                        verbose_name="Ttile",
                    ),
                ),
                (
                    "published",
                    models.BooleanField(
                        default=True,
                        help_text="Is the book public",
                        verbose_name="published",
                    ),
                ),
                (
                    "author",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The Author of the Book",
                        related_name="author_of",
                        to="archiv.person",
                        verbose_name="Author",
                    ),
                ),
                (
                    "place_of_publication",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Publication place of the book",
                        related_name="publication_place_of",
                        to="archiv.place",
                        verbose_name="Publication Place",
                    ),
                ),
            ],
            options={
                "verbose_name": "Buch",
                "verbose_name_plural": "BÃ¼cher",
                "ordering": ["name"],
            },
        ),
    ]
